// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PortalNFE.Register.Companies.Data.Context;

#nullable disable

namespace PortalNFE.Register.Companies.Data.Migrations
{
    [DbContext(typeof(PortalNFECompaniesContext))]
    partial class PortalNFECompaniesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.26")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PortalNFE.Register.Companies.Domain.Models.Company", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<int>("CompanyStatus")
                        .HasColumnType("integer");

                    b.Property<int>("CompanyType")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamptz");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasColumnType("varchar(14)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.Property<string>("FantasyName")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("StateRegistration")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("PortalNFE.Register.Companies.Domain.Models.CompanyAddress", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<Guid>("CompanyId")
                        .HasColumnType("uuid");

                    b.Property<string>("Complement")
                        .IsRequired()
                        .HasColumnType("varchar(140)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamptz");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("timestamptz");

                    b.Property<string>("Neighborhood")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("varchar(20)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Street")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ZipCode")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId")
                        .IsUnique();

                    b.ToTable("CompanyAddress", (string)null);
                });

            modelBuilder.Entity("PortalNFE.Register.Companies.Domain.Models.CompanyAffiliate", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("AffiliateCompanyId")
                        .HasColumnType("uuid");

                    b.Property<int>("CompanyStatus")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("DateChanged")
                        .HasColumnType("timestamptz");

                    b.Property<DateTime>("DateRegister")
                        .HasColumnType("timestamptz");

                    b.Property<Guid>("RootCompanyId")
                        .HasColumnType("uuid");

                    b.HasKey("Id");

                    b.HasIndex("RootCompanyId");

                    b.ToTable("Affiliate", (string)null);
                });

            modelBuilder.Entity("PortalNFE.Register.Companies.Domain.Models.CompanyAddress", b =>
                {
                    b.HasOne("PortalNFE.Register.Companies.Domain.Models.Company", "Company")
                        .WithOne("CompanyAddress")
                        .HasForeignKey("PortalNFE.Register.Companies.Domain.Models.CompanyAddress", "CompanyId")
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("PortalNFE.Register.Companies.Domain.Models.CompanyAffiliate", b =>
                {
                    b.HasOne("PortalNFE.Register.Companies.Domain.Models.Company", "Company")
                        .WithMany("CompanyAffiliate")
                        .HasForeignKey("RootCompanyId")
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("PortalNFE.Register.Companies.Domain.Models.Company", b =>
                {
                    b.Navigation("CompanyAddress")
                        .IsRequired();

                    b.Navigation("CompanyAffiliate");
                });
#pragma warning restore 612, 618
        }
    }
}
